<map id="Graphical Class Hierarchy" name="Graphical Class Hierarchy">
<area shape="rect" id="node1" href="$classmlir_1_1TypeConverter.html" title="Type conversion class." alt="" coords="5,245,156,272"/>
<area shape="rect" id="node2" href="$classmlir_1_1LLVMTypeConverter.html" title="Conversion from types to the LLVM IR dialect." alt="" coords="231,5,415,32"/>
<area shape="rect" id="node3" href="$classmlir_1_1SPIRVTypeConverter.html" title="Type conversion from builtin types to SPIR&#45;V types for shader interface." alt="" coords="229,56,417,83"/>
<area shape="rect" id="node4" href="$structmlir_1_1SparseIterationTypeConverter.html" title="Type converter for iter_space and iterator." alt="" coords="230,107,415,149"/>
<area shape="rect" id="node5" href="$classmlir_1_1SparseTensorTypeToBufferConverter.html" title="Sparse tensor type converter into an actual buffer." alt="" coords="229,173,416,214"/>
<area shape="rect" id="node6" href="$classmlir_1_1SparseTensorTypeToPtrConverter.html" title="Sparse tensor type converter into an opaque pointer." alt="" coords="229,238,416,279"/>
<area shape="rect" id="node7" href="$classmlir_1_1StorageSpecifierToLLVMTypeConverter.html" title=" " alt="" coords="235,303,411,345"/>
<area shape="rect" id="node8" href="$classmlir_1_1arith_1_1NarrowTypeEmulationConverter.html" title="Converts narrow integer or float types that are not supported by the target hardware to wider types." alt="" coords="204,369,441,410"/>
<area shape="rect" id="node9" href="$classmlir_1_1arith_1_1WideIntEmulationConverter.html" title="Converts integer types that are too wide for the target by splitting them in two halves and thus turn..." alt="" coords="217,434,428,475"/>
<area shape="rect" id="node10" href="$classmlir_1_1spirv_1_1MemorySpaceToStorageClassConverter.html" title="Type converter for converting numeric MemRef memory spaces into SPIR&#45;V symbolic ones." alt="" coords="229,499,417,541"/>
</map>
